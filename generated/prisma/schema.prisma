// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  password  String
  vagas     Vaga[]
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Vaga {
  id          String      @id @default(uuid())
  nome        String
  localizacao String
  descricao   String
  salario     Float
  createdBy   Int
  creator     User        @relation(fields: [createdBy], references: [id])
  inscricoes  Inscricao[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Candidato {
  id         String      @id @default(uuid())
  cv_path    String
  inscricoes Inscricao[]
  createdAt  DateTime    @default(now())
}

model Mensage {
  id        String   @id @default(uuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model Inscricao {
  id          String    @id @default(uuid())
  vagaId      String
  vaga        Vaga      @relation(fields: [vagaId], references: [id])
  candidatoId String
  candidato   Candidato @relation(fields: [candidatoId], references: [id])
  createdAt   DateTime  @default(now())
}
